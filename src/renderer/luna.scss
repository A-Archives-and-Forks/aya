@use './theme' as theme;
@use 'sass:meta';
@use 'sass:map';

:root,
.-theme-with-dark-background {
  --luna-color-text: var(--aya-color-text);
  --luna-color-bg-container: var(--aya-color-bg-container);
  --luna-color-border: var(--aya-color-border);
  --luna-color-primary: var(--aya-color-primary);
  --luna-color-fill: var(--aya-color-fill);
  --luna-color-fill-secondary: var(--aya-color-fill-secondary);
  --luna-box-shadow: var(--aya-box-shadow);
}

.luna-setting {
  .luna-setting-item {
    &:hover,
    &.luna-setting-selected {
      background: none;
    }
    &.luna-setting-selected:focus {
      outline: none;
    }
  }
}

.luna-modal {
  top: 28px;
  z-index: theme.$z-index-popup-base;
}

.luna-modal-input {
  user-select: text !important;
}

.luna-notification {
  padding-top: 40px;
  z-index: theme.$z-index-popup-base;
}

.luna-notification-item {
  border-radius: 4px;
  padding: 5px 10px;
}

.luna-image-viewer {
  border: none;
  background: var(--aya-color-bg-container);
}

.luna-logcat {
  border: none;
  color: var(--aya-color-text);
  background: var(--aya-color-bg-container);
}

.luna-logcat-W {
  .luna-logcat-priority {
    background: var(--aya-color-warning-text);
  }
  .luna-logcat-message {
    color: var(--aya-color-warning-text);
  }
}

.luna-logcat-E {
  .luna-logcat-priority {
    background: var(--aya-color-error-text);
  }
  .luna-logcat-message {
    color: var(--aya-color-error-text);
  }
}

.luna-logcat-D {
  .luna-logcat-priority {
    background: var(--aya-color-success-text);
  }
}

.I {
  .luna-logcat-priority {
    background: var(--aya-color-info-text);
  }
}

$colors: 'blue', 'purple', 'cyan', 'green', 'magenta', 'pink', 'red', 'orange',
  'yellow', 'volcano', 'geekblue', 'gold', 'lime';

$variables: meta.module-variables(theme);
@each $color in $colors {
  @for $i from 6 through 10 {
    .luna-logcat-color-#{$color}-#{$i} {
      $variable-name: #{$color}-#{$i};
      color: map.get($variables, $variable-name);
    }
  }
}

.-theme-with-dark-background {
  @each $color in $colors {
    @for $i from 6 through 10 {
      .luna-logcat-color-#{$color}-#{$i} {
        $variable-name: #{$color}-#{$i}-dark;
        color: map.get($variables, $variable-name);
      }
    }
  }
}

.luna-data-grid.luna-data-grid-theme-light {
  .luna-data-grid-data-container {
    .luna-data-grid-node.luna-data-grid-selected,
    .luna-data-grid-node.luna-data-grid-selectable:hover {
      background: var(--aya-color-primary);
    }
    tr:nth-child(even) {
      background: var(--aya-color-fill-alter);
    }
  }
}

.luna-performance-monitor {
  background: var(--aya-color-bg-container) !important;
  border: none;
}

.luna-performance-monitor-title {
  display: inline-block;
  height: 16px;
  font-size: #{theme.$font-size}px;
  line-height: 16px;
}

.luna-command-palette {
  top: 28px;
  z-index: theme.$z-index-popup-base;
}

.luna-command-palette-body {
  padding: #{theme.$padding-x-x-s}px;
  border-radius: #{theme.$border-radius-x-s}px;
}

.luna-command-palette-input {
  border-radius: #{theme.$border-radius-x-s}px;
  padding: #{theme.$padding-x-x-s}px;
  margin-bottom: #{theme.$margin-x-x-s}px;
}

.luna-command-palette-list {
  li {
    border-radius: #{theme.$border-radius-x-s}px;
  }
}
